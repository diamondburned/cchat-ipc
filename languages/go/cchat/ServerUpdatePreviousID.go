// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package cchat

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ServerUpdatePreviousID struct {
	_tab flatbuffers.Table
}

func GetRootAsServerUpdatePreviousID(buf []byte, offset flatbuffers.UOffsetT) *ServerUpdatePreviousID {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ServerUpdatePreviousID{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsServerUpdatePreviousID(buf []byte, offset flatbuffers.UOffsetT) *ServerUpdatePreviousID {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ServerUpdatePreviousID{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *ServerUpdatePreviousID) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ServerUpdatePreviousID) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ServerUpdatePreviousID) ServerId() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ServerUpdatePreviousID) Replace() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *ServerUpdatePreviousID) MutateReplace(n bool) bool {
	return rcv._tab.MutateBoolSlot(6, n)
}

func ServerUpdatePreviousIDStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func ServerUpdatePreviousIDAddServerId(builder *flatbuffers.Builder, serverId flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(serverId), 0)
}
func ServerUpdatePreviousIDAddReplace(builder *flatbuffers.Builder, replace bool) {
	builder.PrependBoolSlot(1, replace, false)
}
func ServerUpdatePreviousIDEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
