// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package cchat

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type AuthenticateEntry struct {
	_tab flatbuffers.Table
}

func GetRootAsAuthenticateEntry(buf []byte, offset flatbuffers.UOffsetT) *AuthenticateEntry {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &AuthenticateEntry{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsAuthenticateEntry(buf []byte, offset flatbuffers.UOffsetT) *AuthenticateEntry {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &AuthenticateEntry{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *AuthenticateEntry) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *AuthenticateEntry) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *AuthenticateEntry) Name() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *AuthenticateEntry) Placeholder() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *AuthenticateEntry) Description() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *AuthenticateEntry) Secret() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *AuthenticateEntry) MutateSecret(n bool) bool {
	return rcv._tab.MutateBoolSlot(10, n)
}

func (rcv *AuthenticateEntry) Multiline() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *AuthenticateEntry) MutateMultiline(n bool) bool {
	return rcv._tab.MutateBoolSlot(12, n)
}

func AuthenticateEntryStart(builder *flatbuffers.Builder) {
	builder.StartObject(5)
}
func AuthenticateEntryAddName(builder *flatbuffers.Builder, name flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(name), 0)
}
func AuthenticateEntryAddPlaceholder(builder *flatbuffers.Builder, placeholder flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(placeholder), 0)
}
func AuthenticateEntryAddDescription(builder *flatbuffers.Builder, description flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(description), 0)
}
func AuthenticateEntryAddSecret(builder *flatbuffers.Builder, secret bool) {
	builder.PrependBoolSlot(3, secret, false)
}
func AuthenticateEntryAddMultiline(builder *flatbuffers.Builder, multiline bool) {
	builder.PrependBoolSlot(4, multiline, false)
}
func AuthenticateEntryEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
