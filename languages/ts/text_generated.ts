// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';
/**
 * @enum {number}
 */
export namespace cchat.text{
export enum Attribute{
  Normal= 1,
  Bold= 2,
  Italics= 4,
  Underline= 8,
  Strikethrough= 16,
  Spoiler= 32,
  Monospace= 64,
  Dimmed= 128
};
}

/**
 * @constructor
 */
export namespace cchat.text{
export class Rich {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Rich
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Rich {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Rich= obj
 * @returns Rich
 */
static getRootAsRich(bb:flatbuffers.ByteBuffer, obj?:Rich):Rich {
  return (obj || new Rich()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Rich= obj
 * @returns Rich
 */
static getSizePrefixedRootAsRich(bb:flatbuffers.ByteBuffer, obj?:Rich):Rich {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Rich()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
content():string|null
content(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
content(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param number index
 * @param cchat.text.Segment= obj
 * @returns cchat.text.Segment
 */
segments(index: number, obj?:cchat.text.Segment):cchat.text.Segment|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new cchat.text.Segment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
segmentsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRich(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset contentOffset
 */
static addContent(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, contentOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset segmentsOffset
 */
static addSegments(builder:flatbuffers.Builder, segmentsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, segmentsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startSegmentsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRich(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createRich(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset, segmentsOffset:flatbuffers.Offset):flatbuffers.Offset {
  Rich.startRich(builder);
  Rich.addContent(builder, contentOffset);
  Rich.addSegments(builder, segmentsOffset);
  return Rich.endRich(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Segment {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Segment
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Segment {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Segment= obj
 * @returns Segment
 */
static getRootAsSegment(bb:flatbuffers.ByteBuffer, obj?:Segment):Segment {
  return (obj || new Segment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Segment= obj
 * @returns Segment
 */
static getSizePrefixedRootAsSegment(bb:flatbuffers.ByteBuffer, obj?:Segment):Segment {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Segment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param cchat.text.SegmentBounds= obj
 * @returns cchat.text.SegmentBounds|null
 */
bounds(obj?:cchat.text.SegmentBounds):cchat.text.SegmentBounds|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new cchat.text.SegmentBounds()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.Colorer= obj
 * @returns cchat.text.Colorer|null
 */
colorer(obj?:cchat.text.Colorer):cchat.text.Colorer|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new cchat.text.Colorer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.Linker= obj
 * @returns cchat.text.Linker|null
 */
linker(obj?:cchat.text.Linker):cchat.text.Linker|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new cchat.text.Linker()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.Imager= obj
 * @returns cchat.text.Imager|null
 */
imager(obj?:cchat.text.Imager):cchat.text.Imager|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new cchat.text.Imager()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.Avatarer= obj
 * @returns cchat.text.Avatarer|null
 */
avatarer(obj?:cchat.text.Avatarer):cchat.text.Avatarer|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new cchat.text.Avatarer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.Mentioner= obj
 * @returns cchat.text.Mentioner|null
 */
mentioner(obj?:cchat.text.Mentioner):cchat.text.Mentioner|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new cchat.text.Mentioner()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.Attributor= obj
 * @returns cchat.text.Attributor|null
 */
attributor(obj?:cchat.text.Attributor):cchat.text.Attributor|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new cchat.text.Attributor()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.Codeblocker= obj
 * @returns cchat.text.Codeblocker|null
 */
codeblocker(obj?:cchat.text.Codeblocker):cchat.text.Codeblocker|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new cchat.text.Codeblocker()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.Quoteblocker= obj
 * @returns cchat.text.Quoteblocker|null
 */
quoteblocker(obj?:cchat.text.Quoteblocker):cchat.text.Quoteblocker|null {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new cchat.text.Quoteblocker()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param cchat.text.MessageReferencer= obj
 * @returns cchat.text.MessageReferencer|null
 */
messageReferencer(obj?:cchat.text.MessageReferencer):cchat.text.MessageReferencer|null {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new cchat.text.MessageReferencer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startSegment(builder:flatbuffers.Builder) {
  builder.startObject(10);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset boundsOffset
 */
static addBounds(builder:flatbuffers.Builder, boundsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, boundsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset colorerOffset
 */
static addColorer(builder:flatbuffers.Builder, colorerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, colorerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset linkerOffset
 */
static addLinker(builder:flatbuffers.Builder, linkerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, linkerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset imagerOffset
 */
static addImager(builder:flatbuffers.Builder, imagerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, imagerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset avatarerOffset
 */
static addAvatarer(builder:flatbuffers.Builder, avatarerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, avatarerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset mentionerOffset
 */
static addMentioner(builder:flatbuffers.Builder, mentionerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, mentionerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset attributorOffset
 */
static addAttributor(builder:flatbuffers.Builder, attributorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, attributorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset codeblockerOffset
 */
static addCodeblocker(builder:flatbuffers.Builder, codeblockerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, codeblockerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset quoteblockerOffset
 */
static addQuoteblocker(builder:flatbuffers.Builder, quoteblockerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, quoteblockerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset messageReferencerOffset
 */
static addMessageReferencer(builder:flatbuffers.Builder, messageReferencerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, messageReferencerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endSegment(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class SegmentBounds {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns SegmentBounds
 */
__init(i:number, bb:flatbuffers.ByteBuffer):SegmentBounds {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param SegmentBounds= obj
 * @returns SegmentBounds
 */
static getRootAsSegmentBounds(bb:flatbuffers.ByteBuffer, obj?:SegmentBounds):SegmentBounds {
  return (obj || new SegmentBounds()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param SegmentBounds= obj
 * @returns SegmentBounds
 */
static getSizePrefixedRootAsSegmentBounds(bb:flatbuffers.ByteBuffer, obj?:SegmentBounds):SegmentBounds {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SegmentBounds()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
start():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
end():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startSegmentBounds(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number start
 */
static addStart(builder:flatbuffers.Builder, start:number) {
  builder.addFieldInt32(0, start, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number end
 */
static addEnd(builder:flatbuffers.Builder, end:number) {
  builder.addFieldInt32(1, end, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endSegmentBounds(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createSegmentBounds(builder:flatbuffers.Builder, start:number, end:number):flatbuffers.Offset {
  SegmentBounds.startSegmentBounds(builder);
  SegmentBounds.addStart(builder, start);
  SegmentBounds.addEnd(builder, end);
  return SegmentBounds.endSegmentBounds(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class MessageReferencer {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns MessageReferencer
 */
__init(i:number, bb:flatbuffers.ByteBuffer):MessageReferencer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param MessageReferencer= obj
 * @returns MessageReferencer
 */
static getRootAsMessageReferencer(bb:flatbuffers.ByteBuffer, obj?:MessageReferencer):MessageReferencer {
  return (obj || new MessageReferencer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param MessageReferencer= obj
 * @returns MessageReferencer
 */
static getSizePrefixedRootAsMessageReferencer(bb:flatbuffers.ByteBuffer, obj?:MessageReferencer):MessageReferencer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MessageReferencer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
messageId():string|null
messageId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
messageId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startMessageReferencer(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset messageIdOffset
 */
static addMessageId(builder:flatbuffers.Builder, messageIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, messageIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endMessageReferencer(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createMessageReferencer(builder:flatbuffers.Builder, messageIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  MessageReferencer.startMessageReferencer(builder);
  MessageReferencer.addMessageId(builder, messageIdOffset);
  return MessageReferencer.endMessageReferencer(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Linker {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Linker
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Linker {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Linker= obj
 * @returns Linker
 */
static getRootAsLinker(bb:flatbuffers.ByteBuffer, obj?:Linker):Linker {
  return (obj || new Linker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Linker= obj
 * @returns Linker
 */
static getSizePrefixedRootAsLinker(bb:flatbuffers.ByteBuffer, obj?:Linker):Linker {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Linker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
link():string|null
link(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
link(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startLinker(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset linkOffset
 */
static addLink(builder:flatbuffers.Builder, linkOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, linkOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endLinker(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createLinker(builder:flatbuffers.Builder, linkOffset:flatbuffers.Offset):flatbuffers.Offset {
  Linker.startLinker(builder);
  Linker.addLink(builder, linkOffset);
  return Linker.endLinker(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Imager {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Imager
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Imager {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Imager= obj
 * @returns Imager
 */
static getRootAsImager(bb:flatbuffers.ByteBuffer, obj?:Imager):Imager {
  return (obj || new Imager()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Imager= obj
 * @returns Imager
 */
static getSizePrefixedRootAsImager(bb:flatbuffers.ByteBuffer, obj?:Imager):Imager {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Imager()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
image():string|null
image(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
image(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param cchat.text.ImagerImageSize= obj
 * @returns cchat.text.ImagerImageSize|null
 */
imageSize(obj?:cchat.text.ImagerImageSize):cchat.text.ImagerImageSize|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new cchat.text.ImagerImageSize()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
imageText():string|null
imageText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
imageText(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startImager(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset imageOffset
 */
static addImage(builder:flatbuffers.Builder, imageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, imageOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset imageSizeOffset
 */
static addImageSize(builder:flatbuffers.Builder, imageSizeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, imageSizeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset imageTextOffset
 */
static addImageText(builder:flatbuffers.Builder, imageTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, imageTextOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endImager(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class ImagerImageSize {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ImagerImageSize
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ImagerImageSize {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ImagerImageSize= obj
 * @returns ImagerImageSize
 */
static getRootAsImagerImageSize(bb:flatbuffers.ByteBuffer, obj?:ImagerImageSize):ImagerImageSize {
  return (obj || new ImagerImageSize()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ImagerImageSize= obj
 * @returns ImagerImageSize
 */
static getSizePrefixedRootAsImagerImageSize(bb:flatbuffers.ByteBuffer, obj?:ImagerImageSize):ImagerImageSize {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ImagerImageSize()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
w():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
h():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startImagerImageSize(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number w
 */
static addW(builder:flatbuffers.Builder, w:number) {
  builder.addFieldInt32(0, w, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number h
 */
static addH(builder:flatbuffers.Builder, h:number) {
  builder.addFieldInt32(1, h, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endImagerImageSize(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createImagerImageSize(builder:flatbuffers.Builder, w:number, h:number):flatbuffers.Offset {
  ImagerImageSize.startImagerImageSize(builder);
  ImagerImageSize.addW(builder, w);
  ImagerImageSize.addH(builder, h);
  return ImagerImageSize.endImagerImageSize(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Avatarer {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Avatarer
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Avatarer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Avatarer= obj
 * @returns Avatarer
 */
static getRootAsAvatarer(bb:flatbuffers.ByteBuffer, obj?:Avatarer):Avatarer {
  return (obj || new Avatarer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Avatarer= obj
 * @returns Avatarer
 */
static getSizePrefixedRootAsAvatarer(bb:flatbuffers.ByteBuffer, obj?:Avatarer):Avatarer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Avatarer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
avatar():string|null
avatar(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatar(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns number
 */
avatarSize():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
avatarText():string|null
avatarText(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
avatarText(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startAvatarer(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset avatarOffset
 */
static addAvatar(builder:flatbuffers.Builder, avatarOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, avatarOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number avatarSize
 */
static addAvatarSize(builder:flatbuffers.Builder, avatarSize:number) {
  builder.addFieldInt32(1, avatarSize, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset avatarTextOffset
 */
static addAvatarText(builder:flatbuffers.Builder, avatarTextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, avatarTextOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAvatarer(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createAvatarer(builder:flatbuffers.Builder, avatarOffset:flatbuffers.Offset, avatarSize:number, avatarTextOffset:flatbuffers.Offset):flatbuffers.Offset {
  Avatarer.startAvatarer(builder);
  Avatarer.addAvatar(builder, avatarOffset);
  Avatarer.addAvatarSize(builder, avatarSize);
  Avatarer.addAvatarText(builder, avatarTextOffset);
  return Avatarer.endAvatarer(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Colorer {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Colorer
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Colorer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Colorer= obj
 * @returns Colorer
 */
static getRootAsColorer(bb:flatbuffers.ByteBuffer, obj?:Colorer):Colorer {
  return (obj || new Colorer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Colorer= obj
 * @returns Colorer
 */
static getSizePrefixedRootAsColorer(bb:flatbuffers.ByteBuffer, obj?:Colorer):Colorer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Colorer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
color():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startColorer(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param number color
 */
static addColor(builder:flatbuffers.Builder, color:number) {
  builder.addFieldInt32(0, color, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endColorer(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createColorer(builder:flatbuffers.Builder, color:number):flatbuffers.Offset {
  Colorer.startColorer(builder);
  Colorer.addColor(builder, color);
  return Colorer.endColorer(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Mentioner {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Mentioner
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Mentioner {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Mentioner= obj
 * @returns Mentioner
 */
static getRootAsMentioner(bb:flatbuffers.ByteBuffer, obj?:Mentioner):Mentioner {
  return (obj || new Mentioner()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Mentioner= obj
 * @returns Mentioner
 */
static getSizePrefixedRootAsMentioner(bb:flatbuffers.ByteBuffer, obj?:Mentioner):Mentioner {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Mentioner()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param cchat.text.Rich= obj
 * @returns cchat.text.Rich|null
 */
mentionInfo(obj?:cchat.text.Rich):cchat.text.Rich|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new cchat.text.Rich()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startMentioner(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset mentionInfoOffset
 */
static addMentionInfo(builder:flatbuffers.Builder, mentionInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, mentionInfoOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endMentioner(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createMentioner(builder:flatbuffers.Builder, mentionInfoOffset:flatbuffers.Offset):flatbuffers.Offset {
  Mentioner.startMentioner(builder);
  Mentioner.addMentionInfo(builder, mentionInfoOffset);
  return Mentioner.endMentioner(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Attributor {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Attributor
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Attributor {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Attributor= obj
 * @returns Attributor
 */
static getRootAsAttributor(bb:flatbuffers.ByteBuffer, obj?:Attributor):Attributor {
  return (obj || new Attributor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Attributor= obj
 * @returns Attributor
 */
static getSizePrefixedRootAsAttributor(bb:flatbuffers.ByteBuffer, obj?:Attributor):Attributor {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Attributor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns cchat.text.Attribute
 */
attribute():cchat.text.Attribute {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readUint32(this.bb_pos + offset)) : /** } */ (0);
};

/**
 * @param flatbuffers.Builder builder
 */
static startAttributor(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param cchat.text.Attribute attribute
 */
static addAttribute(builder:flatbuffers.Builder, attribute:cchat.text.Attribute) {
  builder.addFieldInt32(0, attribute, /** } */ (0));
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAttributor(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createAttributor(builder:flatbuffers.Builder, attribute:cchat.text.Attribute):flatbuffers.Offset {
  Attributor.startAttributor(builder);
  Attributor.addAttribute(builder, attribute);
  return Attributor.endAttributor(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Codeblocker {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Codeblocker
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Codeblocker {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Codeblocker= obj
 * @returns Codeblocker
 */
static getRootAsCodeblocker(bb:flatbuffers.ByteBuffer, obj?:Codeblocker):Codeblocker {
  return (obj || new Codeblocker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Codeblocker= obj
 * @returns Codeblocker
 */
static getSizePrefixedRootAsCodeblocker(bb:flatbuffers.ByteBuffer, obj?:Codeblocker):Codeblocker {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Codeblocker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
codeblockLanguage():string|null
codeblockLanguage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
codeblockLanguage(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startCodeblocker(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset codeblockLanguageOffset
 */
static addCodeblockLanguage(builder:flatbuffers.Builder, codeblockLanguageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, codeblockLanguageOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endCodeblocker(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createCodeblocker(builder:flatbuffers.Builder, codeblockLanguageOffset:flatbuffers.Offset):flatbuffers.Offset {
  Codeblocker.startCodeblocker(builder);
  Codeblocker.addCodeblockLanguage(builder, codeblockLanguageOffset);
  return Codeblocker.endCodeblocker(builder);
}
}
}
/**
 * @constructor
 */
export namespace cchat.text{
export class Quoteblocker {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Quoteblocker
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Quoteblocker {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Quoteblocker= obj
 * @returns Quoteblocker
 */
static getRootAsQuoteblocker(bb:flatbuffers.ByteBuffer, obj?:Quoteblocker):Quoteblocker {
  return (obj || new Quoteblocker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Quoteblocker= obj
 * @returns Quoteblocker
 */
static getSizePrefixedRootAsQuoteblocker(bb:flatbuffers.ByteBuffer, obj?:Quoteblocker):Quoteblocker {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Quoteblocker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
quotePrefix():string|null
quotePrefix(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
quotePrefix(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startQuoteblocker(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset quotePrefixOffset
 */
static addQuotePrefix(builder:flatbuffers.Builder, quotePrefixOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, quotePrefixOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endQuoteblocker(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createQuoteblocker(builder:flatbuffers.Builder, quotePrefixOffset:flatbuffers.Offset):flatbuffers.Offset {
  Quoteblocker.startQuoteblocker(builder);
  Quoteblocker.addQuotePrefix(builder, quotePrefixOffset);
  return Quoteblocker.endQuoteblocker(builder);
}
}
}
