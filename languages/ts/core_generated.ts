// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';
/**
 * @enum {number}
 */
export namespace cchat.core{
export enum Reader{
  NONE= 0,
  Stream= 1,
  File= 2
};

export function unionToReader(
  type: Reader,
  accessor: (obj:cchat.core.File|cchat.core.Stream) => cchat.core.File|cchat.core.Stream|null
): cchat.core.File|cchat.core.Stream|null {
  switch(cchat.core.Reader[type]) {
    case 'NONE': return null; 
    case 'Stream': return accessor(new cchat.core.Stream())! as cchat.core.Stream;
    case 'File': return accessor(new cchat.core.File())! as cchat.core.File;
    default: return null;
  }
}

export function unionListToReader(
  type: Reader, 
  accessor: (index: number, obj:cchat.core.File|cchat.core.Stream) => cchat.core.File|cchat.core.Stream|null, 
  index: number
): cchat.core.File|cchat.core.Stream|null {
  switch(cchat.core.Reader[type]) {
    case 'NONE': return null; 
    case 'Stream': return accessor(index, new cchat.core.Stream())! as cchat.core.Stream;
    case 'File': return accessor(index, new cchat.core.File())! as cchat.core.File;
    default: return null;
  }
}
}

/**
 * @constructor
 */
export namespace cchat.core{
export class Error {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Error
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Error {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Error= obj
 * @returns Error
 */
static getRootAsError(bb:flatbuffers.ByteBuffer, obj?:Error):Error {
  return (obj || new Error()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Error= obj
 * @returns Error
 */
static getSizePrefixedRootAsError(bb:flatbuffers.ByteBuffer, obj?:Error):Error {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Error()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
error():string|null
error(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
error(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startError(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset errorOffset
 */
static addError(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, errorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endError(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // error
  return offset;
};

static createError(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset):flatbuffers.Offset {
  Error.startError(builder);
  Error.addError(builder, errorOffset);
  return Error.endError(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):Error {
  return Error.getRootAsError(new flatbuffers.ByteBuffer(buffer))
}
}
}
/**
 * @constructor
 */
export namespace cchat.core{
export class Time {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Time
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Time {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Time= obj
 * @returns Time
 */
static getRootAsTime(bb:flatbuffers.ByteBuffer, obj?:Time):Time {
  return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Time= obj
 * @returns Time
 */
static getSizePrefixedRootAsTime(bb:flatbuffers.ByteBuffer, obj?:Time):Time {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns flatbuffers.Long
 */
unixNano():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param flatbuffers.Builder builder
 */
static startTime(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long unixNano
 */
static addUnixNano(builder:flatbuffers.Builder, unixNano:flatbuffers.Long) {
  builder.addFieldInt64(0, unixNano, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endTime(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createTime(builder:flatbuffers.Builder, unixNano:flatbuffers.Long):flatbuffers.Offset {
  Time.startTime(builder);
  Time.addUnixNano(builder, unixNano);
  return Time.endTime(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):Time {
  return Time.getRootAsTime(new flatbuffers.ByteBuffer(buffer))
}
}
}
/**
 * @constructor
 */
export namespace cchat.core{
export class StringPair {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns StringPair
 */
__init(i:number, bb:flatbuffers.ByteBuffer):StringPair {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param StringPair= obj
 * @returns StringPair
 */
static getRootAsStringPair(bb:flatbuffers.ByteBuffer, obj?:StringPair):StringPair {
  return (obj || new StringPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param StringPair= obj
 * @returns StringPair
 */
static getSizePrefixedRootAsStringPair(bb:flatbuffers.ByteBuffer, obj?:StringPair):StringPair {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StringPair()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
k():string|null
k(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
k(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
v():string|null
v(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
v(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startStringPair(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset kOffset
 */
static addK(builder:flatbuffers.Builder, kOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, kOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset vOffset
 */
static addV(builder:flatbuffers.Builder, vOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, vOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endStringPair(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // k
  builder.requiredField(offset, 6); // v
  return offset;
};

static createStringPair(builder:flatbuffers.Builder, kOffset:flatbuffers.Offset, vOffset:flatbuffers.Offset):flatbuffers.Offset {
  StringPair.startStringPair(builder);
  StringPair.addK(builder, kOffset);
  StringPair.addV(builder, vOffset);
  return StringPair.endStringPair(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):StringPair {
  return StringPair.getRootAsStringPair(new flatbuffers.ByteBuffer(buffer))
}
}
}
/**
 * @constructor
 */
export namespace cchat.core{
export class Object {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Object
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Object {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns flatbuffers.Long
 */
objectId():flatbuffers.Long {
  return this.bb!.readUint64(this.bb_pos);
};

/**
 * @returns number
 */
static sizeOf():number {
  return 8;
}

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long object_id
 * @returns flatbuffers.Offset
 */
static createObject(builder:flatbuffers.Builder, object_id: flatbuffers.Long):flatbuffers.Offset {
  builder.prep(8, 8);
  builder.writeInt64(object_id);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace cchat.core{
export class File {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns File
 */
__init(i:number, bb:flatbuffers.ByteBuffer):File {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param File= obj
 * @returns File
 */
static getRootAsFile(bb:flatbuffers.ByteBuffer, obj?:File):File {
  return (obj || new File()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param File= obj
 * @returns File
 */
static getSizePrefixedRootAsFile(bb:flatbuffers.ByteBuffer, obj?:File):File {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new File()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
filepath():string|null
filepath(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
filepath(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startFile(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset filepathOffset
 */
static addFilepath(builder:flatbuffers.Builder, filepathOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, filepathOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endFile(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // filepath
  return offset;
};

static createFile(builder:flatbuffers.Builder, filepathOffset:flatbuffers.Offset):flatbuffers.Offset {
  File.startFile(builder);
  File.addFilepath(builder, filepathOffset);
  return File.endFile(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):File {
  return File.getRootAsFile(new flatbuffers.ByteBuffer(buffer))
}
}
}
/**
 * @constructor
 */
export namespace cchat.core{
export class Stream {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Stream
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Stream {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Stream= obj
 * @returns Stream
 */
static getRootAsStream(bb:flatbuffers.ByteBuffer, obj?:Stream):Stream {
  return (obj || new Stream()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Stream= obj
 * @returns Stream
 */
static getSizePrefixedRootAsStream(bb:flatbuffers.ByteBuffer, obj?:Stream):Stream {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Stream()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param cchat.core.StreamTicket= obj
 * @returns cchat.core.StreamTicket|null
 */
ticket(obj?:cchat.core.StreamTicket):cchat.core.StreamTicket|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new cchat.core.StreamTicket()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @returns flatbuffers.Long
 */
bufferSize():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param flatbuffers.Builder builder
 */
static startStream(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset ticketOffset
 */
static addTicket(builder:flatbuffers.Builder, ticketOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, ticketOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long bufferSize
 */
static addBufferSize(builder:flatbuffers.Builder, bufferSize:flatbuffers.Long) {
  builder.addFieldInt64(1, bufferSize, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endStream(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // ticket
  return offset;
};

static createStream(builder:flatbuffers.Builder, ticketOffset:flatbuffers.Offset, bufferSize:flatbuffers.Long):flatbuffers.Offset {
  Stream.startStream(builder);
  Stream.addTicket(builder, ticketOffset);
  Stream.addBufferSize(builder, bufferSize);
  return Stream.endStream(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):Stream {
  return Stream.getRootAsStream(new flatbuffers.ByteBuffer(buffer))
}
}
}
/**
 * @constructor
 */
export namespace cchat.core{
export class StreamTicket {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns StreamTicket
 */
__init(i:number, bb:flatbuffers.ByteBuffer):StreamTicket {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param StreamTicket= obj
 * @returns StreamTicket
 */
static getRootAsStreamTicket(bb:flatbuffers.ByteBuffer, obj?:StreamTicket):StreamTicket {
  return (obj || new StreamTicket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param StreamTicket= obj
 * @returns StreamTicket
 */
static getSizePrefixedRootAsStreamTicket(bb:flatbuffers.ByteBuffer, obj?:StreamTicket):StreamTicket {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StreamTicket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns flatbuffers.Long
 */
ticketId():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param flatbuffers.Builder builder
 */
static startStreamTicket(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long ticketId
 */
static addTicketId(builder:flatbuffers.Builder, ticketId:flatbuffers.Long) {
  builder.addFieldInt64(0, ticketId, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endStreamTicket(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createStreamTicket(builder:flatbuffers.Builder, ticketId:flatbuffers.Long):flatbuffers.Offset {
  StreamTicket.startStreamTicket(builder);
  StreamTicket.addTicketId(builder, ticketId);
  return StreamTicket.endStreamTicket(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):StreamTicket {
  return StreamTicket.getRootAsStreamTicket(new flatbuffers.ByteBuffer(buffer))
}
}
}
/**
 * @constructor
 */
export namespace cchat.core{
export class StreamData {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns StreamData
 */
__init(i:number, bb:flatbuffers.ByteBuffer):StreamData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param StreamData= obj
 * @returns StreamData
 */
static getRootAsStreamData(bb:flatbuffers.ByteBuffer, obj?:StreamData):StreamData {
  return (obj || new StreamData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param StreamData= obj
 * @returns StreamData
 */
static getSizePrefixedRootAsStreamData(bb:flatbuffers.ByteBuffer, obj?:StreamData):StreamData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StreamData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns flatbuffers.Long
 */
ticketId():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param number index
 * @returns number
 */
bytes(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns number
 */
bytesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
bytesArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param cchat.core.Error= obj
 * @returns cchat.core.Error|null
 */
error(obj?:cchat.core.Error):cchat.core.Error|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new cchat.core.Error()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startStreamData(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long ticketId
 */
static addTicketId(builder:flatbuffers.Builder, ticketId:flatbuffers.Long) {
  builder.addFieldInt64(0, ticketId, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset bytesOffset
 */
static addBytes(builder:flatbuffers.Builder, bytesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, bytesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createBytesVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startBytesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset errorOffset
 */
static addError(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, errorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endStreamData(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};


serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):StreamData {
  return StreamData.getRootAsStreamData(new flatbuffers.ByteBuffer(buffer))
}
}
}
