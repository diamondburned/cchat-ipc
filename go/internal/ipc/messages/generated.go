// Code generated by ./_generator. DO NOT EDIT.

package messages

import (
	"github.com/diamondburned/cchat"
	"github.com/diamondburned/cchat-ipc/go/internal/ipc/core"
	"github.com/diamondburned/cchat/text"
)

type AuthenticateEntry struct {
	Name        string `msg:"name"`
	Placeholder string `msg:"placeholder"`
	Description string `msg:"description"`
	Secret      bool   `msg:"secret"`
	Multiline   bool   `msg:"multiline"`
}

func (a AuthenticateEntry) Convert() cchat.AuthenticateEntry {
	return cchat.AuthenticateEntry{
		Name:        a.Name,
		Placeholder: a.Placeholder,
		Description: a.Description,
		Secret:      a.Secret,
		Multiline:   a.Multiline,
	}
}

type CompletionEntry struct {
	Raw       string   `msg:"raw"`
	Text      TextRich `msg:"text"`
	Secondary TextRich `msg:"secondary"`
	IconURL   string   `msg:"icon_url"`
	Image     bool     `msg:"image"`
}

func (c CompletionEntry) Convert() cchat.CompletionEntry {
	return cchat.CompletionEntry{
		Raw:       c.Raw,
		Text:      c.Text.Convert(),
		Secondary: c.Secondary.Convert(),
		IconURL:   c.IconURL,
		Image:     c.Image,
	}
}

type MessageAttachment struct {
	Reader core.Reader `msg:"reader"`
	Name   string      `msg:"name"`
}

func (m MessageAttachment) Convert() cchat.MessageAttachment {
	return cchat.MessageAttachment{
		Reader: m.Reader.Convert(),
		Name:   m.Name,
	}
}

type ErrInvalidConfigAtField struct {
	Key string     `msg:"key"`
	Err core.Error `msg:"err"`
}

func (e ErrInvalidConfigAtField) Convert() cchat.ErrInvalidConfigAtField {
	return cchat.ErrInvalidConfigAtField{
		Key: e.Key,
		Err: e.Err.Convert(),
	}
}

type TextRich struct {
	Content  string        `msg:"content"`
	Segments []TextSegment `msg:"segments"`
}

func (t TextRich) Convert() text.Rich {
	return text.Rich{
		Content:  r.Content,
		Segments: r.Segments.Convert(),
	}
}
